{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Antourage SDK Functional Description The Antourage Widget is designed to work as a self-contained \u2018widget\u2019 within a host app. Once opened, the widget launches a micro-content vertical that includes live broadcasts and on-demand videos. This content is captured by our mobile Broadcaster application. Antourage is mobile first and designed for the creation and viewing of realtime and near real time micro-content. Magnetic Widget The entry point for a user is the magnetic button that appears on the host app. Usually on the main screen, but flexible, the button can appear in more than one place. This magnetic widget can appear in multiple states. \"Resting\" If there are no live videos or new VOD\u2019s to watch the widget will be in a \u201cresting\u201d state. When a user clicks the widget in its resting state, they are directed to the main menu of the widget. \"LIVE\" When a broadcaster starts streaming live video, the button changes state and animates. The live video can be seen inside the widget and \u201cLIVE\u201d tag appears. If a user taps the widget whilst in this state, they are taken directly to the live broadcast. \"NEW\" When there isn\u2019t a live video, but there are unwatched VOD\u2019s the widget animates with a \u201cNEW\u201d tag. If a user clicks the widget at this point, they will subsequently see the main menu. The Main Menu The main menu allows the user to navigate through multiple live and new videos. Whilst navigating through the videos, if they stop scolling a video will play without sound. If a user clicks on the comment or poll icon below any video they will be taken directly to the chat or poll within that video so that they can contribute immediately. The main menu can also be customised, by editing the logo in the corner of the screen to surface the organisation or sponsors. The title of the menu can also be customised. Viewing Live Broadcasts The video player may be used in portrait or landscape mode. In both modes, the viewer can watch the broadcast, see and contribute to comments, and see and respond to polls. Viewing On-demand videos When the user taps on a video, the video begins playing at the beginning, or if this video has already been partially viewed, it will begin playing at the last point the viewer watched. The Antourage Widget keeps track of which videos the user has seen, and updates the number on the magnetic button accordingly. Each video shows the name of the video, name of the broadcaster, total time, and total view count. Display Name In order to contribute to the comments, a user must have an identity in our system, as well as a Display Name that shows in the comments stream. Since not all host apps require a username, we ask users to create a Display Name the first time they try to chat. If the host app does require users to create a username, we can turn off this feature. Comments Comments are contributed by viewers of the live broadcast only. When a video is being watched later as VOD, these comments may be displayed, but cannot be added to. The broadcaster has the ability to review comments on a video and delete ones that they deem to be unacceptable. Antourage administration also has this ability. Polls Polls are created by the broadcaster, and sent out during a live broadcast. They appear on the screen when they are first pushed out to the audience, and viewers can respond or simply close the poll if they do not want to answer. If they answer, they are shown the results right away, and they can see updated results as they come in. These polls are sponsorable and images can be uploaded from the web application so that they surface on behalf of all broadcasters. This uploaded images can also be clickable and link to web pages for special offers or further sponsor activation. The Curtain The curtain feature is supposed to mimic the purpose of a curtain at the theatre. To serve a business purpose such as sponsor exposure or ticket sales, a curtain be lowered at any time. Alternatively, a user can also use the curtain to hide what they are streaming whilst they prepare simulcasts or perform duties off camera. Multiple curtains can be uploaded at the same time, therefore different messages/sponsors that you can be ready to raise awareness of when ready. Curation Content can only be created by those who have been actively been given access to stream by the administrator of our partner. Furthermore, with this access, broadcasters can only stream to the specific channels that they have been granted access to stream to. Third Party Technology To support our functionality, we use a few third-party services and applications. Firebase: used for push notifications, comments and polls. Amazon Media Live: used for streaming and hosting our content","title":"Overview"},{"location":"#antourage-sdk-functional-description","text":"The Antourage Widget is designed to work as a self-contained \u2018widget\u2019 within a host app. Once opened, the widget launches a micro-content vertical that includes live broadcasts and on-demand videos. This content is captured by our mobile Broadcaster application. Antourage is mobile first and designed for the creation and viewing of realtime and near real time micro-content.","title":"Antourage SDK Functional Description"},{"location":"#magnetic-widget","text":"The entry point for a user is the magnetic button that appears on the host app. Usually on the main screen, but flexible, the button can appear in more than one place. This magnetic widget can appear in multiple states.","title":"Magnetic Widget"},{"location":"#resting","text":"If there are no live videos or new VOD\u2019s to watch the widget will be in a \u201cresting\u201d state. When a user clicks the widget in its resting state, they are directed to the main menu of the widget.","title":"\"Resting\""},{"location":"#live","text":"When a broadcaster starts streaming live video, the button changes state and animates. The live video can be seen inside the widget and \u201cLIVE\u201d tag appears. If a user taps the widget whilst in this state, they are taken directly to the live broadcast.","title":"\"LIVE\""},{"location":"#new","text":"When there isn\u2019t a live video, but there are unwatched VOD\u2019s the widget animates with a \u201cNEW\u201d tag. If a user clicks the widget at this point, they will subsequently see the main menu.","title":"\"NEW\""},{"location":"#the-main-menu","text":"The main menu allows the user to navigate through multiple live and new videos. Whilst navigating through the videos, if they stop scolling a video will play without sound. If a user clicks on the comment or poll icon below any video they will be taken directly to the chat or poll within that video so that they can contribute immediately. The main menu can also be customised, by editing the logo in the corner of the screen to surface the organisation or sponsors. The title of the menu can also be customised.","title":"The Main Menu"},{"location":"#viewing-live-broadcasts","text":"The video player may be used in portrait or landscape mode. In both modes, the viewer can watch the broadcast, see and contribute to comments, and see and respond to polls.","title":"Viewing Live Broadcasts"},{"location":"#viewing-on-demand-videos","text":"When the user taps on a video, the video begins playing at the beginning, or if this video has already been partially viewed, it will begin playing at the last point the viewer watched. The Antourage Widget keeps track of which videos the user has seen, and updates the number on the magnetic button accordingly. Each video shows the name of the video, name of the broadcaster, total time, and total view count.","title":"Viewing On-demand videos"},{"location":"#display-name","text":"In order to contribute to the comments, a user must have an identity in our system, as well as a Display Name that shows in the comments stream. Since not all host apps require a username, we ask users to create a Display Name the first time they try to chat. If the host app does require users to create a username, we can turn off this feature.","title":"Display Name"},{"location":"#comments","text":"Comments are contributed by viewers of the live broadcast only. When a video is being watched later as VOD, these comments may be displayed, but cannot be added to. The broadcaster has the ability to review comments on a video and delete ones that they deem to be unacceptable. Antourage administration also has this ability.","title":"Comments"},{"location":"#polls","text":"Polls are created by the broadcaster, and sent out during a live broadcast. They appear on the screen when they are first pushed out to the audience, and viewers can respond or simply close the poll if they do not want to answer. If they answer, they are shown the results right away, and they can see updated results as they come in. These polls are sponsorable and images can be uploaded from the web application so that they surface on behalf of all broadcasters. This uploaded images can also be clickable and link to web pages for special offers or further sponsor activation.","title":"Polls"},{"location":"#the-curtain","text":"The curtain feature is supposed to mimic the purpose of a curtain at the theatre. To serve a business purpose such as sponsor exposure or ticket sales, a curtain be lowered at any time. Alternatively, a user can also use the curtain to hide what they are streaming whilst they prepare simulcasts or perform duties off camera. Multiple curtains can be uploaded at the same time, therefore different messages/sponsors that you can be ready to raise awareness of when ready.","title":"The Curtain"},{"location":"#curation","text":"Content can only be created by those who have been actively been given access to stream by the administrator of our partner. Furthermore, with this access, broadcasters can only stream to the specific channels that they have been granted access to stream to.","title":"Curation"},{"location":"#third-party-technology","text":"To support our functionality, we use a few third-party services and applications. Firebase: used for push notifications, comments and polls. Amazon Media Live: used for streaming and hosting our content","title":"Third Party Technology"},{"location":"push/","text":"Push notifications Subscription Subscription and unsubscription are handled by our partners, not by Antourage dev team. If partners have PN in their system they should provide us with POST endpoint that will receive next JSON payload: { \"title\" : \"some title\" , \"body\" : \"some body\" , \"source\" : \"antourage\" } In addition, we can add any field to the JSON body that our partners need. Sending Push Notifications Antourage backend will sends POST request only if a new live stream is started. Sending PN is an internal implementation of our partners.","title":"Push notfications"},{"location":"push/#push-notifications","text":"","title":"Push notifications"},{"location":"push/#subscription","text":"Subscription and unsubscription are handled by our partners, not by Antourage dev team. If partners have PN in their system they should provide us with POST endpoint that will receive next JSON payload: { \"title\" : \"some title\" , \"body\" : \"some body\" , \"source\" : \"antourage\" } In addition, we can add any field to the JSON body that our partners need.","title":"Subscription"},{"location":"push/#sending-push-notifications","text":"Antourage backend will sends POST request only if a new live stream is started. Sending PN is an internal implementation of our partners.","title":"Sending Push Notifications"},{"location":"widget/","text":"Antourage Widget SDK Example (iOS only) To run the example project, clone the repo, and run pod install from the Example directory first. Requirements iOS iOS 11.3 + Cocoapods Android Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties Installation iOS Antourage is available through CocoaPods . To install it, simply add the following line to your Podfile: pod 'Antourage' And run: $ pod install Android Add: compileOptions { targetCompatibility 1.8 sourceCompatibility 1.8 } and dependencies { ... implementation 'com.github.antourage:AntViewer-android:2.0.24' } Usage Auth iOS It's static method (no need object init), you can use it anywhere you want (login/app start etc). AntWidget . authWith ( apiKey : \"put_your_apiKey_there\" , refUserId : \"put_user_id_from_your_base_or_nil\" , nickname : \"put_user_nickname_from_your_base_or_nil\" ) Android It's static method (no need object init), you can use it anywhere you want (login/app start etc). AntourageFab . authWith ( \"put_your_apiKey_there\" , \"put_user_id_from_your_base_or_null\" , \"put_user_nickname_from_your_base_or_null\" , context ) Handling push notifications iOS To open directly Feed screen from PN interaction handler just get Feed controller and present it modally. func userNotificationCenter ( _ center : UNUserNotificationCenter , didReceive response : UNNotificationResponse , withCompletionHandler completionHandler : @ escaping () -> Void ) { let userInfo = response . notification . request . content . userInfo print ( \" \\( userInfo ) \" ) if let category = userInfo [ \"category\" ] as ? String , category == \"antourage\" { AntWidget . shared . showFeed () } Android To open directly Feed screen from received push notification add this to your \"show notification\" method. val intent = Intent ( this , AntourageActivity :: class . java ) intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP or Intent . FLAG_ACTIVITY_SINGLE_TOP ) val pendingIntent = PendingIntent . getActivity ( this , 0 /* Request code */ , intent , PendingIntent . FLAG_ONE_SHOT ) After that pass pending intent to your notification builder . setContentIntent ( pendingIntent ) Add UI part iOS class ViewController : UIViewController { var widget : AntWidget ! { didSet { view . addSubview ( widget . view ) } } override func viewDidLoad () { super . viewDidLoad () widget = AntWidget . shared } } Android Add antourage widget view to the layout: <com.antourage.weaverlib.ui.fab.AntourageFab android:id= \"@+id/antfab\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" /> Also override onResume and onPause in activity that contains widget: override fun onResume () { super . onResume () antfab . onResume () } override fun onPause () { super . onPause () antfab . onPause () } Localization Android By default android widget will use device's language: Swedish if it is chosen as device\u2019s default language and English in other cases. But if you want to force app to use language that differs from device\u2019s one - you can use method setLocale(lang: String). Currently widget supports only English(\"en\") and Swedish(\"sv\"). antfab . setLocale ( \"en\" ) // or \"sv\" Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller. widgetPosition Enum You can set any widget position from enum widgetMargins Struct You can set custom horizontal and vertical margin for each position. But some positions may ignore it. Max vertical - 220, max horizontal - 50. Author Mykola Vaniurskyi, mv@leobit.com Nazar Mykhailevych, nm@leobit.com License Antourage is available under the MIT license. See the LICENSE file for more info.","title":"Widget"},{"location":"widget/#antourage-widget-sdk","text":"","title":"Antourage Widget SDK"},{"location":"widget/#example-ios-only","text":"To run the example project, clone the repo, and run pod install from the Example directory first.","title":"Example (iOS only)"},{"location":"widget/#requirements","text":"iOS iOS 11.3 + Cocoapods Android Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties","title":"Requirements"},{"location":"widget/#installation","text":"iOS Antourage is available through CocoaPods . To install it, simply add the following line to your Podfile: pod 'Antourage' And run: $ pod install Android Add: compileOptions { targetCompatibility 1.8 sourceCompatibility 1.8 } and dependencies { ... implementation 'com.github.antourage:AntViewer-android:2.0.24' }","title":"Installation"},{"location":"widget/#usage","text":"","title":"Usage"},{"location":"widget/#auth","text":"iOS It's static method (no need object init), you can use it anywhere you want (login/app start etc). AntWidget . authWith ( apiKey : \"put_your_apiKey_there\" , refUserId : \"put_user_id_from_your_base_or_nil\" , nickname : \"put_user_nickname_from_your_base_or_nil\" ) Android It's static method (no need object init), you can use it anywhere you want (login/app start etc). AntourageFab . authWith ( \"put_your_apiKey_there\" , \"put_user_id_from_your_base_or_null\" , \"put_user_nickname_from_your_base_or_null\" , context )","title":"Auth"},{"location":"widget/#handling-push-notifications","text":"iOS To open directly Feed screen from PN interaction handler just get Feed controller and present it modally. func userNotificationCenter ( _ center : UNUserNotificationCenter , didReceive response : UNNotificationResponse , withCompletionHandler completionHandler : @ escaping () -> Void ) { let userInfo = response . notification . request . content . userInfo print ( \" \\( userInfo ) \" ) if let category = userInfo [ \"category\" ] as ? String , category == \"antourage\" { AntWidget . shared . showFeed () } Android To open directly Feed screen from received push notification add this to your \"show notification\" method. val intent = Intent ( this , AntourageActivity :: class . java ) intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP or Intent . FLAG_ACTIVITY_SINGLE_TOP ) val pendingIntent = PendingIntent . getActivity ( this , 0 /* Request code */ , intent , PendingIntent . FLAG_ONE_SHOT ) After that pass pending intent to your notification builder . setContentIntent ( pendingIntent )","title":"Handling push notifications"},{"location":"widget/#add-ui-part","text":"iOS class ViewController : UIViewController { var widget : AntWidget ! { didSet { view . addSubview ( widget . view ) } } override func viewDidLoad () { super . viewDidLoad () widget = AntWidget . shared } } Android Add antourage widget view to the layout: <com.antourage.weaverlib.ui.fab.AntourageFab android:id= \"@+id/antfab\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" /> Also override onResume and onPause in activity that contains widget: override fun onResume () { super . onResume () antfab . onResume () } override fun onPause () { super . onPause () antfab . onPause () }","title":"Add UI part"},{"location":"widget/#localization","text":"Android By default android widget will use device's language: Swedish if it is chosen as device\u2019s default language and English in other cases. But if you want to force app to use language that differs from device\u2019s one - you can use method setLocale(lang: String). Currently widget supports only English(\"en\") and Swedish(\"sv\"). antfab . setLocale ( \"en\" ) // or \"sv\" Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller. widgetPosition Enum You can set any widget position from enum widgetMargins Struct You can set custom horizontal and vertical margin for each position. But some positions may ignore it. Max vertical - 220, max horizontal - 50.","title":"Localization"},{"location":"widget/#author","text":"Mykola Vaniurskyi, mv@leobit.com Nazar Mykhailevych, nm@leobit.com","title":"Author"},{"location":"widget/#license","text":"Antourage is available under the MIT license. See the LICENSE file for more info.","title":"License"}]}