{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Viewer Widget v3 Technical Documentation Overview The Antourage Portal is designed to work as a gateway within the host app or website that transports users to a deep experience of creator content. Once a user has passed through the portal they will find a community and experience that includes live broadcasts, on-demand videos, and image posts. This content is captured by our mobile Creator application or via our admin and any compatible video streaming software. Antourage is a mobile and web view experience designed for viewing of real-time and near real-time micro-content. Portal Features The point of access for a user is the Antourage portal that can be integrated into a host app or host website. Usually hosted on all pages, however the portal can be customized to appear on specific pages only. The portal can appear in multiple forms depending upon activity on the platform, namely live, new and idle. Live When a creator or producer starts streaming a live video, the portal will change state and animate. The portal will expand and a live video will be visible in the center of the animation. A \u201cLIVE\u201d tag will also appear with the title and author of the stream. Once the expanded portal animation ends, the portal will collapse. The \u201cLIVE\u201d tag will remain and be displayed until the live broadcast has ended. If a user taps the portal whilst in the live state, then they will be taken directly to the live broadcast. New If there is not a live streaming video, but there is unseen content, then the widget will display the \u201cNEW\u201d tag. The portal will animate and expand with the most recent unseen video playing in the center of the animation. The expanded portal will collapse after the animation has completed. If a user clicks the portal, then they will be directed to the main feed within the Antourage experience. Idle If there is not a live streaming video or new content that the user has not already seen, then the portal is in an \"idle\" state. The portal will animate and expand with the most recent unseen video playing in the center of the animation. The expanded portal will collapse after the animation has completed. If a user clicks the portal, then they will be directed to the main feed within the Antourage experience.","title":"Overview"},{"location":"#viewer-widget-v3-technical-documentation","text":"","title":"Viewer Widget v3 Technical Documentation"},{"location":"#overview","text":"The Antourage Portal is designed to work as a gateway within the host app or website that transports users to a deep experience of creator content. Once a user has passed through the portal they will find a community and experience that includes live broadcasts, on-demand videos, and image posts. This content is captured by our mobile Creator application or via our admin and any compatible video streaming software. Antourage is a mobile and web view experience designed for viewing of real-time and near real-time micro-content.","title":"Overview"},{"location":"#portal-features","text":"The point of access for a user is the Antourage portal that can be integrated into a host app or host website. Usually hosted on all pages, however the portal can be customized to appear on specific pages only. The portal can appear in multiple forms depending upon activity on the platform, namely live, new and idle.","title":"Portal Features"},{"location":"#live","text":"When a creator or producer starts streaming a live video, the portal will change state and animate. The portal will expand and a live video will be visible in the center of the animation. A \u201cLIVE\u201d tag will also appear with the title and author of the stream. Once the expanded portal animation ends, the portal will collapse. The \u201cLIVE\u201d tag will remain and be displayed until the live broadcast has ended. If a user taps the portal whilst in the live state, then they will be taken directly to the live broadcast.","title":"Live"},{"location":"#new","text":"If there is not a live streaming video, but there is unseen content, then the widget will display the \u201cNEW\u201d tag. The portal will animate and expand with the most recent unseen video playing in the center of the animation. The expanded portal will collapse after the animation has completed. If a user clicks the portal, then they will be directed to the main feed within the Antourage experience.","title":"New"},{"location":"#idle","text":"If there is not a live streaming video or new content that the user has not already seen, then the portal is in an \"idle\" state. The portal will animate and expand with the most recent unseen video playing in the center of the animation. The expanded portal will collapse after the animation has completed. If a user clicks the portal, then they will be directed to the main feed within the Antourage experience.","title":"Idle"},{"location":"developers/android/","text":"Get Started with Antourage Viewer Android SDK Pre-requisites For a successful integration please find our requirements below and make sure that you are compatible. Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties Install Add: compileOptions { targetCompatibility 1.8 sourceCompatibility 1.8 } and dependencies { ... implementation 'com.github.antourage:viewer-sdk-android:{latest_version}}' } Add an Antourage config file Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) Move your antourage_info.json config file into your project's assets folder. If there's no assets folder in your project - simply create it at app/src/main/. Initialization You have to configure AntourageFab singleton before calling other methods. AntourageFab . configure ( yourContext ) Add UI part The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. Add antourage widget view to the layout: val antfab = AntourageFab ( yourContext ) antfab . showFab ( yourActivity ) Also override onResume and onPause in activity that contains widget: override fun onResume () { super . onResume () antfab . onResume () } override fun onPause () { super . onPause () antfab . onPause () } Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller. Localization By default the Android widget will use the device language. English and Swedish languages are available. If you want to force app to use language that differs from current one \u2014 you can set localization by executing setLocale in antourage fab object. antfab . setLocale ( \"en\" ) // or \"sv\" Required Parameters TBD: e.g. team_id Describe what parameters are there and where to get them Example To run the example project, clone the Antourage repo , open project in Android Studio and run app module.","title":"Get Started with Antourage Viewer Android SDK"},{"location":"developers/android/#get-started-with-antourage-viewer-android-sdk","text":"","title":"Get Started with Antourage Viewer Android SDK"},{"location":"developers/android/#pre-requisites","text":"For a successful integration please find our requirements below and make sure that you are compatible. Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties","title":"Pre-requisites"},{"location":"developers/android/#install","text":"Add: compileOptions { targetCompatibility 1.8 sourceCompatibility 1.8 } and dependencies { ... implementation 'com.github.antourage:viewer-sdk-android:{latest_version}}' }","title":"Install"},{"location":"developers/android/#add-an-antourage-config-file","text":"Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) Move your antourage_info.json config file into your project's assets folder. If there's no assets folder in your project - simply create it at app/src/main/.","title":"Add an Antourage config file"},{"location":"developers/android/#initialization","text":"You have to configure AntourageFab singleton before calling other methods. AntourageFab . configure ( yourContext )","title":"Initialization"},{"location":"developers/android/#add-ui-part","text":"The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. Add antourage widget view to the layout: val antfab = AntourageFab ( yourContext ) antfab . showFab ( yourActivity ) Also override onResume and onPause in activity that contains widget: override fun onResume () { super . onResume () antfab . onResume () } override fun onPause () { super . onPause () antfab . onPause () } Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller.","title":"Add UI part"},{"location":"developers/android/#localization","text":"By default the Android widget will use the device language. English and Swedish languages are available. If you want to force app to use language that differs from current one \u2014 you can set localization by executing setLocale in antourage fab object. antfab . setLocale ( \"en\" ) // or \"sv\"","title":"Localization"},{"location":"developers/android/#required-parameters","text":"TBD: e.g. team_id Describe what parameters are there and where to get them","title":"Required Parameters"},{"location":"developers/android/#example","text":"To run the example project, clone the Antourage repo , open project in Android Studio and run app module.","title":"Example"},{"location":"developers/capacitor/","text":"Get Started with Antourage Viewer Capacitor SDK Pre-requisites For a successful integration please find our requirements below and make sure that you are compatible. Capacitor iOS: Xcode 12.5 or later CocoaPods 1.10.0 or later Project must target iOS 11.3 or later Landscape orientation support Android: Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties Install Antourage SDK is installed with npm (Node Package Manager) . To install the SDK go through steps below: Step 1 npm i antourage-capacitor --save Step 2 npx cap sync Android Additional Configuration You should find app build.gradle file and add maven { url 'https://jitpack.io' } to the repositories block. You should create variable private AntourageCapacitor antouragePlugin; , add import com.antourage.plugin.AntourageCapacitor; , add(AntourageCapacitor.class); and initialize antouragePlugin with antouragePlugin = (AntourageCapacitor) getBridge().getPlugin(AntourageCapacitor.class.getAnnotation(NativePlugin.class).name()).getInstance(); in MainActivity class. Also you need to add antouragePlugin.onPause(); and antouragePlugin.onResume(); to overriden onPause and onResume methods accordingly, as you see below: npx cap sync Add an Antourage config file Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) iOS Move your Antourage-Info.plist config file into your Xcode project. If prompted, select to add the config file to all targets. Android Move your antourage_info.json config file into your project's assets folder. If there's no assets folder in your project - simply create it at app/src/main/. Initialization You should try to call this method once per app lifecycle. import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . configure (); Add UI part The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. Antourage widget works as overlay over Capacitor web view. You can show and hide it whenever you want (navigation handlers or component lifecycle etc). import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . showWidget (); Antourage . hideWidget (); Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller. Orientation (iOS only) Your app may support only portrait orientation, but our widget should be able to use landscape orientation while playing video. First of all you should enable ladnscape orientation in xcode project. First approach: You can use cordova-plugin-screen-orientation to be able to lock orientations occasionally depending on the content. Just add two listeners to handle widget state: import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . addListener ( 'onViewerAppear' , ( info : any ) => { window . screen . orientation . unlock (); }); Antourage . addListener ( 'onViewerDisappear' , ( info : any ) => { window . screen . orientation . lock ( 'portrait' ); }); Second approach (a bit easier): We can lock main capacitor controller to portrait from plugin (but application will support lanscape). It means that your ionic UI that runs in webView will be in portrait only, but everthing outside capacitor controller (Antrourage screens, or some native modals etc) will be able to use landscape. You just need to call this function after your app starts: import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . lockCapacitorControllerToPortrait (); Localization By default the Android widget will use the device language. On iOS we use the application language. English and Swedish languages are availabe. If you want to force app to use language that differs from current one \u2014 you can use methods below: import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . setLocale ({ locale : \"en\" }); // or \"sv\" Required Parameters TBD: e.g. team_id Describe what parameters are there and where to get them Example To run the example project, clone the Antourage repo first. And run code below from the example directory: npm i npx cap sync ionic capacitor run ios --livereload --external","title":"Get Started with Antourage Viewer Capacitor SDK"},{"location":"developers/capacitor/#get-started-with-antourage-viewer-capacitor-sdk","text":"","title":"Get Started with Antourage Viewer Capacitor SDK"},{"location":"developers/capacitor/#pre-requisites","text":"For a successful integration please find our requirements below and make sure that you are compatible. Capacitor iOS: Xcode 12.5 or later CocoaPods 1.10.0 or later Project must target iOS 11.3 or later Landscape orientation support Android: Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties","title":"Pre-requisites"},{"location":"developers/capacitor/#install","text":"Antourage SDK is installed with npm (Node Package Manager) . To install the SDK go through steps below: Step 1 npm i antourage-capacitor --save Step 2 npx cap sync Android Additional Configuration You should find app build.gradle file and add maven { url 'https://jitpack.io' } to the repositories block. You should create variable private AntourageCapacitor antouragePlugin; , add import com.antourage.plugin.AntourageCapacitor; , add(AntourageCapacitor.class); and initialize antouragePlugin with antouragePlugin = (AntourageCapacitor) getBridge().getPlugin(AntourageCapacitor.class.getAnnotation(NativePlugin.class).name()).getInstance(); in MainActivity class. Also you need to add antouragePlugin.onPause(); and antouragePlugin.onResume(); to overriden onPause and onResume methods accordingly, as you see below: npx cap sync","title":"Install"},{"location":"developers/capacitor/#add-an-antourage-config-file","text":"Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) iOS Move your Antourage-Info.plist config file into your Xcode project. If prompted, select to add the config file to all targets. Android Move your antourage_info.json config file into your project's assets folder. If there's no assets folder in your project - simply create it at app/src/main/.","title":"Add an Antourage config file"},{"location":"developers/capacitor/#initialization","text":"You should try to call this method once per app lifecycle. import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . configure ();","title":"Initialization"},{"location":"developers/capacitor/#add-ui-part","text":"The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. Antourage widget works as overlay over Capacitor web view. You can show and hide it whenever you want (navigation handlers or component lifecycle etc). import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . showWidget (); Antourage . hideWidget (); Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller.","title":"Add UI part"},{"location":"developers/capacitor/#orientation-ios-only","text":"Your app may support only portrait orientation, but our widget should be able to use landscape orientation while playing video. First of all you should enable ladnscape orientation in xcode project. First approach: You can use cordova-plugin-screen-orientation to be able to lock orientations occasionally depending on the content. Just add two listeners to handle widget state: import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . addListener ( 'onViewerAppear' , ( info : any ) => { window . screen . orientation . unlock (); }); Antourage . addListener ( 'onViewerDisappear' , ( info : any ) => { window . screen . orientation . lock ( 'portrait' ); }); Second approach (a bit easier): We can lock main capacitor controller to portrait from plugin (but application will support lanscape). It means that your ionic UI that runs in webView will be in portrait only, but everthing outside capacitor controller (Antrourage screens, or some native modals etc) will be able to use landscape. You just need to call this function after your app starts: import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . lockCapacitorControllerToPortrait ();","title":"Orientation (iOS only)"},{"location":"developers/capacitor/#localization","text":"By default the Android widget will use the device language. On iOS we use the application language. English and Swedish languages are availabe. If you want to force app to use language that differs from current one \u2014 you can use methods below: import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . setLocale ({ locale : \"en\" }); // or \"sv\"","title":"Localization"},{"location":"developers/capacitor/#required-parameters","text":"TBD: e.g. team_id Describe what parameters are there and where to get them","title":"Required Parameters"},{"location":"developers/capacitor/#example","text":"To run the example project, clone the Antourage repo first. And run code below from the example directory: npm i npx cap sync ionic capacitor run ios --livereload --external","title":"Example"},{"location":"developers/ios/","text":"Get Started with Antourage Viewer iOS SDK Pre-requisites For a successful integration please find our requirements below and make sure that you are compatible: Xcode 12.5 or later CocoaPods 1.10.0 or later Project must target iOS 11.3 or later Landscape orientation support Install The Antourage SDK for iOS is available as a CocoaPods pod . CocoaPods is an open source dependency manager for Swift and Objective-C Cocoa projects. If you don't already have the CocoaPods installed, see the CocoaPods Getting Started guide . Create a Podfile if you don't already have one: cd your-project-directory pod init Add the Antourage pod to your Podfile: platform :ios , '11.3' pod 'Antourage' Install the pods: pod install Add an Antourage config file Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) Move your Antourage-Info.plist config file into your Xcode project. If prompted, select to add the config file to all targets. Initialization Import the Antourage module in your AppDelegate: import Antourage Configure an Antourage shared instance, usually in your app's application(_:didFinishLaunchingWithOptions:) method: Antourage . configure () Add UI part The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. import Antourage class ViewController : UIViewController { var widget : Antourage ! { didSet { view . addSubview ( widget . view ) } } override func viewDidLoad () { super . viewDidLoad () widget = Antourage . shared } } Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller. Orientation Your app may support only portrait orientation, but our widget should be able to use landscape orientation while playing video. First of all you should enable ladnscape orientation in xcode project. You can lock orientation for specific controllers by adding code below to them: override var supportedInterfaceOrientations : UIInterfaceOrientationMask { return [. portrait ] } Localization By default the iOS widget will use the application language. English and Swedish languages are available. If you want to force app to use language that differs from the current one \u2014 use the code below: Antourage . shared . widgetLocale = . english //.swedish Required Parameters TBD: e.g. team_id Describe what parameters are there and where to get them Example TBD: provide a code snippet to use with comments and descriptions","title":"Get Started with Antourage Viewer iOS SDK"},{"location":"developers/ios/#get-started-with-antourage-viewer-ios-sdk","text":"","title":"Get Started with Antourage Viewer iOS SDK"},{"location":"developers/ios/#pre-requisites","text":"For a successful integration please find our requirements below and make sure that you are compatible: Xcode 12.5 or later CocoaPods 1.10.0 or later Project must target iOS 11.3 or later Landscape orientation support","title":"Pre-requisites"},{"location":"developers/ios/#install","text":"The Antourage SDK for iOS is available as a CocoaPods pod . CocoaPods is an open source dependency manager for Swift and Objective-C Cocoa projects. If you don't already have the CocoaPods installed, see the CocoaPods Getting Started guide . Create a Podfile if you don't already have one: cd your-project-directory pod init Add the Antourage pod to your Podfile: platform :ios , '11.3' pod 'Antourage' Install the pods: pod install","title":"Install"},{"location":"developers/ios/#add-an-antourage-config-file","text":"Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) Move your Antourage-Info.plist config file into your Xcode project. If prompted, select to add the config file to all targets.","title":"Add an Antourage config file"},{"location":"developers/ios/#initialization","text":"Import the Antourage module in your AppDelegate: import Antourage Configure an Antourage shared instance, usually in your app's application(_:didFinishLaunchingWithOptions:) method: Antourage . configure ()","title":"Initialization"},{"location":"developers/ios/#add-ui-part","text":"The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. import Antourage class ViewController : UIViewController { var widget : Antourage ! { didSet { view . addSubview ( widget . view ) } } override func viewDidLoad () { super . viewDidLoad () widget = Antourage . shared } } Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller.","title":"Add UI part"},{"location":"developers/ios/#orientation","text":"Your app may support only portrait orientation, but our widget should be able to use landscape orientation while playing video. First of all you should enable ladnscape orientation in xcode project. You can lock orientation for specific controllers by adding code below to them: override var supportedInterfaceOrientations : UIInterfaceOrientationMask { return [. portrait ] }","title":"Orientation"},{"location":"developers/ios/#localization","text":"By default the iOS widget will use the application language. English and Swedish languages are available. If you want to force app to use language that differs from the current one \u2014 use the code below: Antourage . shared . widgetLocale = . english //.swedish","title":"Localization"},{"location":"developers/ios/#required-parameters","text":"TBD: e.g. team_id Describe what parameters are there and where to get them","title":"Required Parameters"},{"location":"developers/ios/#example","text":"TBD: provide a code snippet to use with comments and descriptions","title":"Example"},{"location":"developers/push-notifications/","text":"Push Notifications Subscription Subscription and unsubscription is handled by our partners, not by the Antourage dev team. If any of our partners have push notification implemented in their system, they should provide us with the POST endpoint. Antourage backend services will send the following JSON payload to this endpoint: { \"title\" : \"some title\" , \"body\" : \"some body\" , \"source\" : \"antourage\" } Sending Push Notifications Antourage backend will sends POST request only if new content is available. Sending push notifications is handled by our partners infrastructure. Mobile Handling Push Notifications By tapping on Push notifications from Antourage, the application should show the Antourage feed screen. iOS To open directly the Feed screen from the push notification interaction handler just run showFeed() and it will be presented as modal. import Antourage func userNotificationCenter ( _ center : UNUserNotificationCenter , didReceive response : UNNotificationResponse , withCompletionHandler completionHandler : @ escaping () -> Void ) { let userInfo = response . notification . request . content . userInfo if let category = userInfo [ \"category\" ] as ? String , category == \"antourage\" { Antourage . shared . showFeed () } } Android To open directly Feed screen from received push notification add this to your \"show notification\" method. val intent = Intent ( this , AntourageActivity :: class . java ) intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP or Intent . FLAG_ACTIVITY_SINGLE_TOP ) val pendingIntent = PendingIntent . getActivity ( this , 0 /* Request code */ , intent , PendingIntent . FLAG_ONE_SHOT ) After that pass pending intent to your notification builder . setContentIntent ( pendingIntent ) React Native To open directly the Feed screen from the push notification interaction handler just run showFeed() and it will be presented as modal. import { Antourage } from 'antourage-react-native' ; // ... Antourage . showFeed (); Capacitor To open directly the Feed screen from the push notification interaction handler just run showFeedScreen() and it will be presented as modal. import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . showFeedScreen ();","title":"Push Notfications"},{"location":"developers/push-notifications/#push-notifications","text":"","title":"Push Notifications"},{"location":"developers/push-notifications/#subscription","text":"Subscription and unsubscription is handled by our partners, not by the Antourage dev team. If any of our partners have push notification implemented in their system, they should provide us with the POST endpoint. Antourage backend services will send the following JSON payload to this endpoint: { \"title\" : \"some title\" , \"body\" : \"some body\" , \"source\" : \"antourage\" }","title":"Subscription"},{"location":"developers/push-notifications/#sending-push-notifications","text":"Antourage backend will sends POST request only if new content is available. Sending push notifications is handled by our partners infrastructure.","title":"Sending Push Notifications"},{"location":"developers/push-notifications/#mobile","text":"","title":"Mobile"},{"location":"developers/push-notifications/#handling-push-notifications","text":"By tapping on Push notifications from Antourage, the application should show the Antourage feed screen. iOS To open directly the Feed screen from the push notification interaction handler just run showFeed() and it will be presented as modal. import Antourage func userNotificationCenter ( _ center : UNUserNotificationCenter , didReceive response : UNNotificationResponse , withCompletionHandler completionHandler : @ escaping () -> Void ) { let userInfo = response . notification . request . content . userInfo if let category = userInfo [ \"category\" ] as ? String , category == \"antourage\" { Antourage . shared . showFeed () } } Android To open directly Feed screen from received push notification add this to your \"show notification\" method. val intent = Intent ( this , AntourageActivity :: class . java ) intent . addFlags ( Intent . FLAG_ACTIVITY_CLEAR_TOP or Intent . FLAG_ACTIVITY_SINGLE_TOP ) val pendingIntent = PendingIntent . getActivity ( this , 0 /* Request code */ , intent , PendingIntent . FLAG_ONE_SHOT ) After that pass pending intent to your notification builder . setContentIntent ( pendingIntent ) React Native To open directly the Feed screen from the push notification interaction handler just run showFeed() and it will be presented as modal. import { Antourage } from 'antourage-react-native' ; // ... Antourage . showFeed (); Capacitor To open directly the Feed screen from the push notification interaction handler just run showFeedScreen() and it will be presented as modal. import { Plugins } from '@capacitor/core' ; const { Antourage } = Plugins ; Antourage . showFeedScreen ();","title":"Handling Push Notifications"},{"location":"developers/react-native/","text":"Get Started with Antourage Viewer React Native SDK Pre-requisites For a successful integration please find our requirements below and make sure that you are compatible. react-native 0.62.2 or later iOS: Xcode 12.5 or later CocoaPods 1.10.0 or later Project must target iOS 11.3 or later Landscape orientation support Android: Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties Install Antourage SDK is installed with npm (Node Package Manager) . To install the SDK go through steps below: Step 1 npm i antourage-react-native --save Step 2 Open ios directory from terminal and install pods: cd ios pod install Add an Antourage config file Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) iOS Move your Antourage-Info.plist config file into your Xcode project. If prompted, select to add the config file to all targets. Android Move your antourage_info.json config file into your project's assets folder. If there's no assets folder in your project - simply create it at app/src/main/. Initialization You should to try call this method once per app lifecycle. import { Antourage } from 'antourage-react-native' ; // ... Antourage . configure (); Add UI part The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. import AntourageView from 'antourage-react-native' ; // ... render () { return ( < View style = { styles . container } > < Text style = { styles . welcome } > Welcome to React Native !< /Text> < Text style = { styles . instructions } > To get started , edit App . js < /Text> < Text style = { styles . instructions } > { instructions } < /Text> < AntourageView onViewerAppear = {() => console . log ( 'Appeared' )} onViewerDisappear = {() => console . log ( 'Disappeared' )} widgetPosition = { 'bottomRight' } widgetLocale = { 'en' } widgetMargins = {{ vertical : 50 , horizontal : 20 }} /> < /View> ); } Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller. Orientation (iOS only) Your app may support only portrait orientation, but our widget should be able to use landscape orientation while playing video. First of all you should enable ladnscape orientation in xcode project. You can use some third-party library ( react-native-orientation-locker ) to be able to lock orientations occasionally depending on the content. Just add two listeners to handle widget state: import AntourageView from 'antourage-react-native' ; import Orientation from 'react-native-orientation-locker' ; // ... < AntourageView onViewerAppear = {() => Orientation . unlockAllOrientations () } onViewerDisappear = {() => Orientation . lockToPortrait () } /> Localization By default the Android widget will use the device language. On iOS we use the application language. English and Swedish languages are availabe. If you want to force app to use language that differs from current one \u2014 you can set localization by setting widgetLocale property in antourage view component: import AntourageView from 'antourage-react-native' ; // ... < AntourageView widgetLocale = { 'en' } /> // or \"sv\" Required Parameters TBD: e.g. team_id Describe what parameters are there and where to get them Example To run the example project, clone the Antourage repo first. Run yarn bootstrap in the root directory to install the required dependencies for each package. While developing, you can run the example app for testing needs. To start the packager: yarn example start To run the example app on Android: yarn example android To run the example app on iOS: yarn example ios","title":"Get Started with Antourage Viewer React Native SDK"},{"location":"developers/react-native/#get-started-with-antourage-viewer-react-native-sdk","text":"","title":"Get Started with Antourage Viewer React Native SDK"},{"location":"developers/react-native/#pre-requisites","text":"For a successful integration please find our requirements below and make sure that you are compatible. react-native 0.62.2 or later iOS: Xcode 12.5 or later CocoaPods 1.10.0 or later Project must target iOS 11.3 or later Landscape orientation support Android: Minimum Android SDK: Antourage widget requires a minimum API level of 21; Starting from 0.2.0 version library has migrated to the androidX, so make sure that you have android.useAndroidX=true android.enableJetifier=true in your gradle.properties","title":"Pre-requisites"},{"location":"developers/react-native/#install","text":"Antourage SDK is installed with npm (Node Package Manager) . To install the SDK go through steps below: Step 1 npm i antourage-react-native --save Step 2 Open ios directory from terminal and install pods: cd ios pod install","title":"Install"},{"location":"developers/react-native/#add-an-antourage-config-file","text":"Please be sure that you already have the config file, otherwise please contact Antourage to request one for your application. The file contains a data for authorization (app client ids, redirect urls, etc.) iOS Move your Antourage-Info.plist config file into your Xcode project. If prompted, select to add the config file to all targets. Android Move your antourage_info.json config file into your project's assets folder. If there's no assets folder in your project - simply create it at app/src/main/.","title":"Add an Antourage config file"},{"location":"developers/react-native/#initialization","text":"You should to try call this method once per app lifecycle. import { Antourage } from 'antourage-react-native' ; // ... Antourage . configure ();","title":"Initialization"},{"location":"developers/react-native/#add-ui-part","text":"The main feature of Antourage SDK is the widget \u2014 a simple button that should be placed on your screen. The widget will fully work only after successful configuration. If you need to know when the Feed screen appears and disappears you can use callbacks. import AntourageView from 'antourage-react-native' ; // ... render () { return ( < View style = { styles . container } > < Text style = { styles . welcome } > Welcome to React Native !< /Text> < Text style = { styles . instructions } > To get started , edit App . js < /Text> < Text style = { styles . instructions } > { instructions } < /Text> < AntourageView onViewerAppear = {() => console . log ( 'Appeared' )} onViewerDisappear = {() => console . log ( 'Disappeared' )} widgetPosition = { 'bottomRight' } widgetLocale = { 'en' } widgetMargins = {{ vertical : 50 , horizontal : 20 }} /> < /View> ); } Property Type Description onViewerAppear Closure Called when the user opens the widget controller. onViewerDisappear Closure Called when the user dismisses the widget controller.","title":"Add UI part"},{"location":"developers/react-native/#orientation-ios-only","text":"Your app may support only portrait orientation, but our widget should be able to use landscape orientation while playing video. First of all you should enable ladnscape orientation in xcode project. You can use some third-party library ( react-native-orientation-locker ) to be able to lock orientations occasionally depending on the content. Just add two listeners to handle widget state: import AntourageView from 'antourage-react-native' ; import Orientation from 'react-native-orientation-locker' ; // ... < AntourageView onViewerAppear = {() => Orientation . unlockAllOrientations () } onViewerDisappear = {() => Orientation . lockToPortrait () } />","title":"Orientation (iOS only)"},{"location":"developers/react-native/#localization","text":"By default the Android widget will use the device language. On iOS we use the application language. English and Swedish languages are availabe. If you want to force app to use language that differs from current one \u2014 you can set localization by setting widgetLocale property in antourage view component: import AntourageView from 'antourage-react-native' ; // ... < AntourageView widgetLocale = { 'en' } /> // or \"sv\"","title":"Localization"},{"location":"developers/react-native/#required-parameters","text":"TBD: e.g. team_id Describe what parameters are there and where to get them","title":"Required Parameters"},{"location":"developers/react-native/#example","text":"To run the example project, clone the Antourage repo first. Run yarn bootstrap in the root directory to install the required dependencies for each package. While developing, you can run the example app for testing needs. To start the packager: yarn example start To run the example app on Android: yarn example android To run the example app on iOS: yarn example ios","title":"Example"},{"location":"developers/web/","text":"Get Started with Antourage Viewer JavaScript SDK Pre-requisites For a successful integration please find our requirements below and make sure that you are compatible. Supported Browsers: Chrome - 2 last versions Safari - 2 last major versions Firefox - 2 last versions + ESR Edge - 16-18 and 2 last Chromium-based versions Install The following code should be added to a web-site: < script > // NOTE: This parameter has to be changed var PARTNER_ID = 'PARTNER_ID' ; window . _ANTOURAGE_CONFIG = { partner_id : PARTNER_ID , }; </ script > < script > ! ( function () { window . _ANTOURAGE = new EventTarget (); const t = window , e = document , n = function () { const t = e . createElement ( 'script' ); ( t . type = 'text/javascript' ), ( t . async = ! 0 ), ( t . src = 'https://widget.antourage.com/v3/widget.js' ); const n = e . getElementsByTagName ( 'script' )[ 0 ]; n . parentNode . insertBefore ( t , n ); }; t . attachEvent ? t . attachEvent ( 'onload' , n ) : t . addEventListener ( 'load' , n , ! 1 ); })(); </ script > It is recommended to place this code at the end of <head> element. The script will inject all other necessary elements. Required Parameters This data will be provided before integration: PARTNER_ID - the 'id' of the registered team. This 'id' can be requested after the team is registered.","title":"Web"},{"location":"developers/web/#get-started-with-antourage-viewer-javascript-sdk","text":"","title":"Get Started with Antourage Viewer JavaScript SDK"},{"location":"developers/web/#pre-requisites","text":"For a successful integration please find our requirements below and make sure that you are compatible. Supported Browsers: Chrome - 2 last versions Safari - 2 last major versions Firefox - 2 last versions + ESR Edge - 16-18 and 2 last Chromium-based versions","title":"Pre-requisites"},{"location":"developers/web/#install","text":"The following code should be added to a web-site: < script > // NOTE: This parameter has to be changed var PARTNER_ID = 'PARTNER_ID' ; window . _ANTOURAGE_CONFIG = { partner_id : PARTNER_ID , }; </ script > < script > ! ( function () { window . _ANTOURAGE = new EventTarget (); const t = window , e = document , n = function () { const t = e . createElement ( 'script' ); ( t . type = 'text/javascript' ), ( t . async = ! 0 ), ( t . src = 'https://widget.antourage.com/v3/widget.js' ); const n = e . getElementsByTagName ( 'script' )[ 0 ]; n . parentNode . insertBefore ( t , n ); }; t . attachEvent ? t . attachEvent ( 'onload' , n ) : t . addEventListener ( 'load' , n , ! 1 ); })(); </ script > It is recommended to place this code at the end of <head> element. The script will inject all other necessary elements.","title":"Install"},{"location":"developers/web/#required-parameters","text":"This data will be provided before integration: PARTNER_ID - the 'id' of the registered team. This 'id' can be requested after the team is registered.","title":"Required Parameters"},{"location":"faq/","text":"FAQ How can I configure the color of the widget button? You can set the color of the portal whilst integrating the widget. Further information about configurations can be found in the Developer section. If you would like to change the color of the portal following integration, then the Antourage team can help. Please send a request to support@antourage.com or contact your account manager. How can I configure the color of the tags, namely \"Live\", \"New\"? You can set the color of the tags whilst integrating the widget. Further information about configurations can be found in the Developer section. If you would like to change the color of the portal following integration, then the Antourage team can help. Please send a request to support@antourage.com or contact your account manager. How can I configure the color of the labels, namely title, author, CTA \"Join the full experience!\"? You can set the color of the labels whilst integrating the widget. Further information about configurations can be found in the Developer section. If you would like to change the color of the portal following integration, then the Antourage team can help. Please send a request to support@antourage.com or contact your account manager. How does the portal behave whilst in the \u2018LIVE\u2019 state? When the creator or producer starts broadcasting, the \"LIVE\" tag will appear on the button. After a short period of time the portal will animate and expand. The live stream is played in the center of the animation with the tag (LIVE) and the labels (stream name and creator) relating to that video visible. After the expanded animation is complete, the portal will collapse, the labels will fade away, the LIVE tag will be retained. The \u2018LIVE\u2019 state is given priority over the other states of the portal. The portal transitions to the \u2018LIVE\u2019 state as soon as the creator begins broadcasting. If a broadcast is initiated whilst an animation is already live, then the portal will transition to \u2018LIVE\u2019 state after the previous animation has finished. How will the portal behave whilst in the \u2018NEW\u2019 state? When new content is uploaded or there is new content that is unseen by the user, the \"NEW\" tag is displayed on the portal. After a short period of time the portal will expand. The details of the stream are played on the labels in the expansion animation. After the expanded animation is finished, the portal will collapse, and the labels will transition back to New tag. If any animation is in process when a new state is made available, the existing animation will be completed before starting the next. How will the portal behave whilst in the \u2018Idle\u2019 state? If there is not a live streaming video or new content that the user has not already seen, then the portal is in an \"idle\" state and no tag is displayed. When there is no unseen content or live video, no tag is displayed. The portal will animate and expand with the most recent unseen video playing in the center of the animation. The expanded portal will collapse after the animation has completed. Where does the portal take users if they click on the CTA? When a user clicks on a portal they will be transported to the Antourage experience. A sub domain providing a deep social experience that includes live broadcasts, on-demand videos, and image posts.","title":"General"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#how-can-i-configure-the-color-of-the-widget-button","text":"You can set the color of the portal whilst integrating the widget. Further information about configurations can be found in the Developer section. If you would like to change the color of the portal following integration, then the Antourage team can help. Please send a request to support@antourage.com or contact your account manager.","title":"How can I configure the color of the widget button?"},{"location":"faq/#how-can-i-configure-the-color-of-the-tags-namely-live-new","text":"You can set the color of the tags whilst integrating the widget. Further information about configurations can be found in the Developer section. If you would like to change the color of the portal following integration, then the Antourage team can help. Please send a request to support@antourage.com or contact your account manager.","title":"How can I configure the color of the tags, namely \"Live\", \"New\"?"},{"location":"faq/#how-can-i-configure-the-color-of-the-labels-namely-title-author-cta-join-the-full-experience","text":"You can set the color of the labels whilst integrating the widget. Further information about configurations can be found in the Developer section. If you would like to change the color of the portal following integration, then the Antourage team can help. Please send a request to support@antourage.com or contact your account manager.","title":"How can I configure the color of the labels, namely title, author, CTA \"Join the full experience!\"?"},{"location":"faq/#how-does-the-portal-behave-whilst-in-the-live-state","text":"When the creator or producer starts broadcasting, the \"LIVE\" tag will appear on the button. After a short period of time the portal will animate and expand. The live stream is played in the center of the animation with the tag (LIVE) and the labels (stream name and creator) relating to that video visible. After the expanded animation is complete, the portal will collapse, the labels will fade away, the LIVE tag will be retained. The \u2018LIVE\u2019 state is given priority over the other states of the portal. The portal transitions to the \u2018LIVE\u2019 state as soon as the creator begins broadcasting. If a broadcast is initiated whilst an animation is already live, then the portal will transition to \u2018LIVE\u2019 state after the previous animation has finished.","title":"How does the portal behave whilst in the \u2018LIVE\u2019 state?"},{"location":"faq/#how-will-the-portal-behave-whilst-in-the-new-state","text":"When new content is uploaded or there is new content that is unseen by the user, the \"NEW\" tag is displayed on the portal. After a short period of time the portal will expand. The details of the stream are played on the labels in the expansion animation. After the expanded animation is finished, the portal will collapse, and the labels will transition back to New tag. If any animation is in process when a new state is made available, the existing animation will be completed before starting the next. How will the portal behave whilst in the \u2018Idle\u2019 state? If there is not a live streaming video or new content that the user has not already seen, then the portal is in an \"idle\" state and no tag is displayed. When there is no unseen content or live video, no tag is displayed. The portal will animate and expand with the most recent unseen video playing in the center of the animation. The expanded portal will collapse after the animation has completed.","title":"How will the portal behave whilst in the \u2018NEW\u2019 state?"},{"location":"faq/#where-does-the-portal-take-users-if-they-click-on-the-cta","text":"When a user clicks on a portal they will be transported to the Antourage experience. A sub domain providing a deep social experience that includes live broadcasts, on-demand videos, and image posts.","title":"Where does the portal take users if they click on the CTA?"}]}